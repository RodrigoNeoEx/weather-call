{"ast":null,"code":"var _jsxFileName = \"/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectState.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestStateAPI } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SelectState extends Component {\n  constructor(props) {\n    super(props);\n    this.createOptions = this.createOptions.bind(this);\n  }\n\n  async createOptions() {\n    const {\n      country,\n      getStates,\n      states\n    } = this.props;\n    await getStates(country.iso2);\n    console.log(states);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.createOptions,\n        children: \"teste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  country: state.country.country,\n  states: state.states.states\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getStates: input => dispatch(requestStateAPI(input))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectState);","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectState.jsx"],"names":["React","Component","connect","requestStateAPI","SelectState","constructor","props","createOptions","bind","country","getStates","states","iso2","console","log","render","mapStateToProps","state","mapDispatchToProps","dispatch","input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,kBAAhC;;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEkB,QAAbD,aAAa,GAAG;AACpB,UAAM;AAAEE,MAAAA,OAAF;AAAWC,MAAAA,SAAX;AAAsBC,MAAAA;AAAtB,QAAiC,KAAKL,KAA5C;AACA,UAAMI,SAAS,CAACD,OAAO,CAACG,IAAT,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AACA,QAAA,IAAI,EAAC,QADL;AAEA,QAAA,OAAO,EAAG,KAAKR,aAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAvBiC;;AA0BpC,MAAMS,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,OAAO,EAAEQ,KAAK,CAACR,OAAN,CAAcA,OADW;AAElCE,EAAAA,MAAM,EAAEM,KAAK,CAACN,MAAN,CAAaA;AAFa,CAAZ,CAAxB;;AAKA,MAAMO,kBAAkB,GAAIC,QAAD,KAAe;AACxCT,EAAAA,SAAS,EAAGU,KAAD,IAAWD,QAAQ,CAAChB,eAAe,CAACiB,KAAD,CAAhB;AADU,CAAf,CAA3B;;AAIA,eAAelB,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,WAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestStateAPI } from '../redux/actions';\n\nclass SelectState extends Component {\n  constructor(props) {\n    super(props);\n    this.createOptions = this.createOptions.bind(this);\n  }\n\n  async createOptions() {\n    const { country, getStates, states } = this.props\n    await getStates(country.iso2)\n    console.log(states)\n  }\n\n  render() {\n    return(\n      <div>\n        <button\n        type=\"button\"\n        onClick={ this.createOptions }\n        >\n          teste\n        </button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  country: state.country.country,\n  states: state.states.states,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getStates: (input) => dispatch(requestStateAPI(input)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectState);\n"]},"metadata":{},"sourceType":"module"}