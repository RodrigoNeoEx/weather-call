{"ast":null,"code":"var _jsxFileName = \"/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectCity.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestCityAPI } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass SelectCity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCity: '',\n      city: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      selectedCity: event.target.value\n    });\n  }\n\n  async requestCitys() {\n    // const {selectedCity } = this.state\n    const {\n      country,\n      getCitys,\n      states,\n      city\n    } = this.props;\n    console.log(country, states); // await getCitys(country, states);\n    // return  (\n    // <select value={ selectedCity } onChange={this.handleChange}>\n    //   { city.map((cityName, index) => {\n    //     return (\n    //     <option value={cityName.name} key={ index }>\n    //       { cityName.name }\n    //     </option>\n    //     )}\n    //   )}\n    // </select>\n    // )\n  }\n\n  render() {\n    const {\n      country,\n      getCitys,\n      states,\n      city\n    } = this.props;\n    console.log(country, states);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.requestCitys,\n        children: \"Submit your state\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), this.requestCitys]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  city: state.city.city // selectedState: state.selectedState.selectedState,\n  // country: state.country.country,\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCitys: (countryIso, stateIso) => dispatch(requestCityAPI(countryIso, stateIso))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectCity);","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectCity.jsx"],"names":["React","Component","connect","requestCityAPI","SelectCity","constructor","props","state","selectedCity","city","handleChange","bind","event","setState","target","value","requestCitys","country","getCitys","states","console","log","render","mapStateToProps","mapDispatchToProps","dispatch","countryIso","stateIso"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AACjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,EADH;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AAACL,MAAAA,YAAY,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAA5B,KAAd;AACD;;AAEiB,QAAZC,YAAY,GAAG;AACnB;AACA,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA,MAArB;AAA6BV,MAAAA;AAA7B,QAAsC,KAAKH,KAAjD;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAqBE,MAArB,EAHmB,CAInB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AACDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA,OAAF;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA,MAArB;AAA6BV,MAAAA;AAA7B,QAAsC,KAAKH,KAAjD;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAqBE,MAArB;AACA,wBACE;AAAA,8BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKH,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEI,KAAKA,YAFT;AAAA,oBADF;AAMD;;AAxCgC;;AA2CnC,MAAMO,eAAe,GAAIhB,KAAD,KAAY;AAClCE,EAAAA,IAAI,EAAEF,KAAK,CAACE,IAAN,CAAWA,IADiB,CAElC;AACA;;AAHkC,CAAZ,CAAxB;;AAMA,MAAMe,kBAAkB,GAAIC,QAAD,KAAe;AACxCP,EAAAA,QAAQ,EAAE,CAACQ,UAAD,EAAaC,QAAb,KAA0BF,QAAQ,CAACtB,cAAc,CAACuB,UAAD,EAAaC,QAAb,CAAf;AADJ,CAAf,CAA3B;;AAIA,eAAezB,OAAO,CAACqB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CpB,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestCityAPI } from '../redux/actions';\n\nclass SelectCity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCity: '',\n      city: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({selectedCity: event.target.value});\n  }\n\n  async requestCitys() {\n    // const {selectedCity } = this.state\n    const { country, getCitys, states, city } = this.props;\n    console.log(country, states)\n    // await getCitys(country, states);\n    // return  (\n    // <select value={ selectedCity } onChange={this.handleChange}>\n    //   { city.map((cityName, index) => {\n    //     return (\n    //     <option value={cityName.name} key={ index }>\n    //       { cityName.name }\n    //     </option>\n    //     )}\n    //   )}\n    // </select>\n    // )\n  }\n  render() {\n    const { country, getCitys, states, city } = this.props;\n    console.log(country, states)\n    return(\n      <>\n        <button type=\"button\" onClick={this.requestCitys}>Submit your state</button>\n        { this.requestCitys}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  city: state.city.city,\n  // selectedState: state.selectedState.selectedState,\n  // country: state.country.country,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCitys: (countryIso, stateIso) => dispatch(requestCityAPI(countryIso, stateIso)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectCity);\n"]},"metadata":{},"sourceType":"module"}