{"ast":null,"code":"import { requestCountry } from './country';\nimport { requestStates, setSelectedState } from './states';\nimport { requestCity, setSelectedCity } from './city';\nimport { requestWeather } from './weather';\nimport { fetchCountryAPI, fetchStateByCountryAPI, fetchCityAPI, fetchWeatherAPI } from '../../services/requestAPI';\nexport { requestCountry, requestStates, requestCity, setSelectedState, setSelectedCity, requestWeather };\nexport const requestCountryAPI = input => async dispatch => {\n  dispatch(requestCountry());\n\n  try {\n    const response = await fetchCountryAPI(input);\n    return dispatch(requestCountry(response));\n  } catch (error) {\n    return console.log(error);\n  }\n};\nexport const requestStateAPI = countryIso => async dispatch => {\n  dispatch(requestStates());\n\n  try {\n    const response = await fetchStateByCountryAPI(countryIso);\n    return dispatch(requestStates(response));\n  } catch (error) {\n    return console.log(error);\n  }\n};\nexport const requestCityAPI = (countryName, stateName) => async dispatch => {\n  if (stateName) {\n    dispatch(requestCity());\n\n    try {\n      const response = await fetchCityAPI(countryName, stateName);\n      return dispatch(requestCity(response));\n    } catch (error) {\n      return console.log(error);\n    }\n  }\n};\nexport const requestWeatherAPI = (selectedCity, selectedCountry) => async dispatch => {\n  dispatch(requestWeather());\n\n  try {\n    const response = await fetchWeatherAPI(selectedCity, selectedCountry);\n    return dispatch(requestWeather(response));\n  } catch (error) {\n    return console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/redux/actions/index.jsx"],"names":["requestCountry","requestStates","setSelectedState","requestCity","setSelectedCity","requestWeather","fetchCountryAPI","fetchStateByCountryAPI","fetchCityAPI","fetchWeatherAPI","requestCountryAPI","input","dispatch","response","error","console","log","requestStateAPI","countryIso","requestCityAPI","countryName","stateName","requestWeatherAPI","selectedCity","selectedCountry"],"mappings":"AAAA,SAASA,cAAT,QAA+B,WAA/B;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,UAAhD;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,QAA7C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SACEC,eADF,EAEEC,sBAFF,EAGEC,YAHF,EAIEC,eAJF,QAKO,2BALP;AAOA,SACET,cADF,EAEEC,aAFF,EAGEE,WAHF,EAIED,gBAJF,EAKEE,eALF,EAMEC,cANF;AASA,OAAO,MAAMK,iBAAiB,GAAIC,KAAD,IAAW,MAAOC,QAAP,IAAoB;AAC9DA,EAAAA,QAAQ,CAACZ,cAAc,EAAf,CAAR;;AACA,MAAI;AACF,UAAMa,QAAQ,GAAG,MAAMP,eAAe,CAACK,KAAD,CAAtC;AACA,WAAOC,QAAQ,CAACZ,cAAc,CAACa,QAAD,CAAf,CAAf;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,WAAOC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAP;AACD;AACF,CARM;AAUP,OAAO,MAAMG,eAAe,GAAIC,UAAD,IAAgB,MAAON,QAAP,IAAoB;AACjEA,EAAAA,QAAQ,CAACX,aAAa,EAAd,CAAR;;AACA,MAAI;AACF,UAAMY,QAAQ,GAAG,MAAMN,sBAAsB,CAACW,UAAD,CAA7C;AACA,WAAON,QAAQ,CAACX,aAAa,CAACY,QAAD,CAAd,CAAf;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,WAAOC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAP;AACD;AACF,CARM;AAUP,OAAO,MAAMK,cAAc,GAAG,CAACC,WAAD,EAAcC,SAAd,KAA4B,MAAOT,QAAP,IAAoB;AAC5E,MAAGS,SAAH,EAAc;AACZT,IAAAA,QAAQ,CAACT,WAAW,EAAZ,CAAR;;AACF,QAAI;AACF,YAAMU,QAAQ,GAAG,MAAML,YAAY,CAACY,WAAD,EAAcC,SAAd,CAAnC;AACA,aAAOT,QAAQ,CAACT,WAAW,CAACU,QAAD,CAAZ,CAAf;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACd,aAAOC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAP;AACD;AAAC;AACH,CATM;AAWP,OAAO,MAAMQ,iBAAiB,GAAG,CAACC,YAAD,EAAeC,eAAf,KAAmC,MAAOZ,QAAP,IAAoB;AACpFA,EAAAA,QAAQ,CAACP,cAAc,EAAf,CAAR;;AACF,MAAI;AACF,UAAMQ,QAAQ,GAAG,MAAMJ,eAAe,CAACc,YAAD,EAAeC,eAAf,CAAtC;AACA,WAAOZ,QAAQ,CAACP,cAAc,CAACQ,QAAD,CAAf,CAAf;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,WAAOC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAP;AACD;AACF,CARM","sourcesContent":["import { requestCountry } from './country';\nimport { requestStates, setSelectedState } from './states';\nimport { requestCity, setSelectedCity } from './city';\nimport { requestWeather } from './weather';\nimport {\n  fetchCountryAPI,\n  fetchStateByCountryAPI,\n  fetchCityAPI,\n  fetchWeatherAPI,\n} from '../../services/requestAPI';\n\nexport {\n  requestCountry,\n  requestStates,\n  requestCity,\n  setSelectedState,\n  setSelectedCity,\n  requestWeather,\n};\n\nexport const requestCountryAPI = (input) => async (dispatch) => {\n  dispatch(requestCountry());\n  try {\n    const response = await fetchCountryAPI(input);\n    return dispatch(requestCountry(response));\n  } catch (error) {\n    return console.log(error);\n  }\n};\n\nexport const requestStateAPI = (countryIso) => async (dispatch) => {\n  dispatch(requestStates());\n  try {\n    const response = await fetchStateByCountryAPI(countryIso);\n    return dispatch(requestStates(response));\n  } catch (error) {\n    return console.log(error);\n  }\n};\n\nexport const requestCityAPI = (countryName, stateName) => async (dispatch) => {\n  if(stateName) {\n    dispatch(requestCity());\n  try {\n    const response = await fetchCityAPI(countryName, stateName);\n    return dispatch(requestCity(response));\n  } catch (error) {\n    return console.log(error);\n  }}\n};\n\nexport const requestWeatherAPI = (selectedCity, selectedCountry) => async (dispatch) => {\n    dispatch(requestWeather());\n  try {\n    const response = await fetchWeatherAPI(selectedCity, selectedCountry);\n    return dispatch(requestWeather(response));\n  } catch (error) {\n    return console.log(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}