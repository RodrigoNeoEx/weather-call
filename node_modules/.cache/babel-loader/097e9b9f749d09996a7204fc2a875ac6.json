{"ast":null,"code":"var _jsxFileName = \"/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/ShowSearch.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestWeatherAPI } from '../redux/actions';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShowSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.requestWeather = this.requestWeather.bind(this);\n  }\n\n  async requestWeather(event) {\n    const {\n      getWeather,\n      selectedCity,\n      country\n    } = this.props;\n    event.preventDefault();\n    await getWeather(selectedCity, country.iso2);\n    this.props.history.push(this.props.match.path);\n  }\n\n  render() {\n    const {\n      country,\n      selectedState,\n      selectedCity\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"showResult\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"searchResult\",\n        children: [`Country: ${country.iso2}`, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 38\n        }, this), `State: ${selectedState}`, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 37\n        }, this), `City: ${selectedCity}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), typeof selectedCity === \"string\" && selectedCity.length > 0 ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Weather\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submitSearch\",\n          type: \"button\",\n          onClick: this.requestWeather,\n          path: \"/weather\",\n          children: \"See the weather at this location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), \"// \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"submitSearch\",\n        children: \"Choose Country, State and City before search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  country: state.country.country,\n  selectedCity: state.selectedCity.citySelected,\n  selectedState: state.selectedState.stateSelected,\n  weather: state.weather.weather\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getWeather: (selectedCity, country) => dispatch(requestWeatherAPI(selectedCity, country))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowSearch);","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/ShowSearch.jsx"],"names":["React","Component","connect","requestWeatherAPI","Link","ShowSearch","constructor","props","requestWeather","bind","event","getWeather","selectedCity","country","preventDefault","iso2","history","push","match","path","render","selectedState","length","mapStateToProps","state","citySelected","stateSelected","weather","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AACjCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEmB,QAAdD,cAAc,CAACE,KAAD,EAAQ;AAC1B,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,YAAd;AAA4BC,MAAAA;AAA5B,QAAwC,KAAKN,KAAnD;AACAG,IAAAA,KAAK,CAACI,cAAN;AACA,UAAMH,UAAU,CAACC,YAAD,EAAeC,OAAO,CAACE,IAAvB,CAAhB;AACA,SAAKR,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwB,KAAKV,KAAL,CAAWW,KAAX,CAAiBC,IAAzC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,OAAF;AAAWQ,MAAAA,aAAX;AAA0BT,MAAAA;AAA1B,QAA2C,KAAKL,KAAtD;AACA,wBACA;AAAS,MAAA,SAAS,EAAC,YAAnB;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA,mBACI,YAAWM,OAAO,CAACE,IAAK,EAD5B,oBAC+B;AAAA;AAAA;AAAA;AAAA,gBAD/B,EAEI,UAASM,aAAc,EAF3B,oBAE8B;AAAA;AAAA;AAAA;AAAA,gBAF9B,EAGI,SAAQT,YAAa,EAHzB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAMI,OAAOA,YAAP,KAA0B,QAA1B,IAAsCA,YAAY,CAACU,MAAb,GAAsB,CAA5D,gBAEE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,UAAT;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAE,KAAKd,cAHhB;AAIE,UAAA,IAAI,EAAC,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,gBAaA;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAuBD;;AAtCgC;;AAyCnC,MAAMe,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,OAAO,EAAEW,KAAK,CAACX,OAAN,CAAcA,OADW;AAElCD,EAAAA,YAAY,EAAEY,KAAK,CAACZ,YAAN,CAAmBa,YAFC;AAGlCJ,EAAAA,aAAa,EAAEG,KAAK,CAACH,aAAN,CAAoBK,aAHD;AAIlCC,EAAAA,OAAO,EAAEH,KAAK,CAACG,OAAN,CAAcA;AAJW,CAAZ,CAAxB;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxClB,EAAAA,UAAU,EAAE,CAACC,YAAD,EAAeC,OAAf,KAA2BgB,QAAQ,CAAC1B,iBAAiB,CAACS,YAAD,EAAeC,OAAf,CAAlB;AADP,CAAf,CAA3B;;AAIA,eAAeX,OAAO,CAACqB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CvB,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestWeatherAPI } from '../redux/actions';\nimport { Link } from 'react-router-dom';\n\nclass ShowSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.requestWeather = this.requestWeather.bind(this)\n  }\n\n  async requestWeather(event) {\n    const { getWeather, selectedCity, country } = this.props;\n    event.preventDefault();\n    await getWeather(selectedCity, country.iso2);\n    this.props.history.push(this.props.match.path)\n  }\n\n  render() {\n    const { country, selectedState, selectedCity } = this.props\n    return(\n    <section className=\"showResult\">\n      <span className=\"searchResult\">\n        {`Country: ${country.iso2}`} <br/>\n        {`State: ${selectedState}`} <br/>\n        {`City: ${selectedCity}` }\n      </span>\n      { typeof(selectedCity) ===  \"string\" && selectedCity.length > 0\n        ? (\n          <Link to=\"/Weather\">\n            <button\n              className=\"submitSearch\"\n              type=\"button\"\n              onClick={this.requestWeather}\n              path=\"/weather\"\n            >\n              See the weather at this location\n            </button>\n          // </Link>\n          )\n      : <span className=\"submitSearch\">Choose Country, State and City before search</span>\n      }\n    </section>)\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  country: state.country.country,\n  selectedCity: state.selectedCity.citySelected,\n  selectedState: state.selectedState.stateSelected,\n  weather: state.weather.weather,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getWeather: (selectedCity, country) => dispatch(requestWeatherAPI(selectedCity, country)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowSearch);"]},"metadata":{},"sourceType":"module"}