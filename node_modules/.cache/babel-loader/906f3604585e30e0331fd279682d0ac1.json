{"ast":null,"code":"var _jsxFileName = \"/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectState.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setSelectedState } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SelectState extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedState: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const {\n      selectedState\n    } = this.state;\n    const {\n      getSelectedState\n    } = this.props;\n    this.setState({\n      selectedState: event.target.value\n    });\n    getSelectedState(selectedState);\n  }\n\n  render() {\n    const {\n      states\n    } = this.props;\n    const {\n      selectedState\n    } = this.state;\n    console.log(selectedState);\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      value: this.state.selectedState,\n      onChange: this.handleChange,\n      children: states ? states.map(stateName => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: stateName.iso2,\n          children: `${stateName.name} - ${stateName.iso2}`\n        }, stateName.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getSelectedState: input => dispatch(setSelectedState(input))\n});\n\nconst mapStateToProps = state => ({\n  states: state.states.states\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectState);","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectState.jsx"],"names":["React","Component","connect","setSelectedState","SelectState","constructor","props","state","selectedState","handleChange","bind","event","getSelectedState","setState","target","value","render","states","console","log","map","stateName","iso2","name","mapDispatchToProps","dispatch","input","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE;AADJ,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAClB,UAAM;AAAEH,MAAAA;AAAF,QAAoB,KAAKD,KAA/B;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAuB,KAAKN,KAAlC;AACA,SAAKO,QAAL,CAAc;AAACL,MAAAA,aAAa,EAAEG,KAAK,CAACG,MAAN,CAAaC;AAA7B,KAAd;AACAH,IAAAA,gBAAgB,CAACJ,aAAD,CAAhB;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKX,KAAxB;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAoB,KAAKD,KAA/B;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYX,aAAZ;AACA,wBACE;AAAQ,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,aAA1B;AAAyC,MAAA,QAAQ,EAAE,KAAKC,YAAxD;AAAA,gBACIQ,MAAM,GAAGA,MAAM,CAACG,GAAP,CAAYC,SAAD,IAAgB;AACpC,4BACA;AACE,UAAA,KAAK,EAAEA,SAAS,CAACC,IADnB;AAAA,oBAIK,GAAED,SAAS,CAACE,IAAK,MAAKF,SAAS,CAACC,IAAK;AAJ1C,WAEQD,SAAS,CAACE,IAFlB;AAAA;AAAA;AAAA;AAAA,gBADA;AAOD,OARU,CAAH,gBASN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAlCiC;;AAqCpC,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCb,EAAAA,gBAAgB,EAAGc,KAAD,IAAWD,QAAQ,CAACtB,gBAAgB,CAACuB,KAAD,CAAjB;AADG,CAAf,CAA3B;;AAIA,MAAMC,eAAe,GAAIpB,KAAD,KAAY;AAClCU,EAAAA,MAAM,EAAEV,KAAK,CAACU,MAAN,CAAaA;AADa,CAAZ,CAAxB;;AAIA,eAAef,OAAO,CAACyB,eAAD,EAAkBH,kBAAlB,CAAP,CAA6CpB,WAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setSelectedState } from '../redux/actions';\n\nclass SelectState extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedState: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { selectedState } = this.state\n    const { getSelectedState } = this.props\n    this.setState({selectedState: event.target.value});\n    getSelectedState(selectedState)\n  }\n\n  render() {\n    const { states } = this.props;\n    const { selectedState } = this.state\n    console.log(selectedState)\n    return(\n      <select value={this.state.selectedState} onChange={this.handleChange}>\n        { states ? states.map((stateName,) => {\n          return (\n          <option\n            value={stateName.iso2}\n            key={ stateName.name }\n          >\n            { `${stateName.name} - ${stateName.iso2}` }\n          </option>);\n        })\n        : <option>Loading</option> }\n      </select>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getSelectedState: (input) => dispatch(setSelectedState(input)),\n});\n\nconst mapStateToProps = (state) => ({\n  states: state.states.states,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectState);\n"]},"metadata":{},"sourceType":"module"}