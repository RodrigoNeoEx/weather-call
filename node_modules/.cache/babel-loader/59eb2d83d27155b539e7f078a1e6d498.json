{"ast":null,"code":"var _jsxFileName = \"/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectState.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestStateAPI } from '../redux/actions';\nimport { fetchStateByCountryAPI } from '../services/requestAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SelectState extends Component {\n  constructor(props) {\n    super(props);\n    this.createOptions = this.createOptions.bind(this);\n  }\n\n  async createOptions() {\n    // const { country, getStates, states } = this.props\n    // let stateC = country.name\n    // console.log(stateC)\n    // getStates(stateC)\n    // console.log(states)\n    fetchStateByCountryAPI();\n  }\n\n  render() {\n    const {\n      states\n    } = this.props;\n    console.log(states);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.createOptions,\n        children: \"teste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  country: state.country.country,\n  states: state.states.states\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getStates: input => dispatch(requestStateAPI(input))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectState);","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectState.jsx"],"names":["React","Component","connect","requestStateAPI","fetchStateByCountryAPI","SelectState","constructor","props","createOptions","bind","render","states","console","log","mapStateToProps","state","country","mapDispatchToProps","dispatch","getStates","input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,sBAAT,QAAuC,wBAAvC;;;AAGA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAClCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEkB,QAAbD,aAAa,GAAG;AACpB;AACA;AACA;AACA;AACA;AACAJ,IAAAA,sBAAsB;AACvB;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKJ,KAAxB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,wBACE;AAAA,6BACE;AACA,QAAA,IAAI,EAAC,QADL;AAEA,QAAA,OAAO,EAAG,KAAKH,aAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA5BiC;;AA+BpC,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,CAAcA,OADW;AAElCL,EAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaA;AAFa,CAAZ,CAAxB;;AAKA,MAAMM,kBAAkB,GAAIC,QAAD,KAAe;AACxCC,EAAAA,SAAS,EAAGC,KAAD,IAAWF,QAAQ,CAACf,eAAe,CAACiB,KAAD,CAAhB;AADU,CAAf,CAA3B;;AAKA,eAAelB,OAAO,CAACY,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CZ,WAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestStateAPI } from '../redux/actions';\nimport { fetchStateByCountryAPI } from '../services/requestAPI'\n\n\nclass SelectState extends Component {\n  constructor(props) {\n    super(props);\n    this.createOptions = this.createOptions.bind(this);\n  }\n\n  async createOptions() {\n    // const { country, getStates, states } = this.props\n    // let stateC = country.name\n    // console.log(stateC)\n    // getStates(stateC)\n    // console.log(states)\n    fetchStateByCountryAPI()\n  }\n\n  render() {\n    const { states } = this.props\n    console.log(states)\n    return(\n      <div>\n        <button\n        type=\"button\"\n        onClick={ this.createOptions }\n        >\n          teste\n        </button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  country: state.country.country,\n  states: state.states.states,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getStates: (input) => dispatch(requestStateAPI(input)),\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectState);\n"]},"metadata":{},"sourceType":"module"}