{"ast":null,"code":"var _jsxFileName = \"/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectState.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setSelectedState } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SelectState extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedState: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async handleChange(event) {\n    const {\n      selectedState\n    } = this.state;\n    const {\n      getSelectedState\n    } = this.props;\n    this.setState({\n      selectedState: event.target.value\n    });\n    await getSelectedState(selectedState);\n    console.log(selectedState);\n  }\n\n  render() {\n    const {\n      states\n    } = this.props;\n    const {\n      selectedState\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedState,\n      onChange: this.handleChange,\n      children: states.map(stateName => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: stateName.iso2,\n          children: `${stateName.name} - ${stateName.iso2}`\n        }, stateName.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getSelectedState: input => dispatch(setSelectedState(input))\n});\n\nconst mapStateToProps = state => ({\n  states: state.states.states,\n  selectedState: state.selectedState.selectedState\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectState);","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectState.jsx"],"names":["React","Component","connect","setSelectedState","SelectState","constructor","props","state","selectedState","handleChange","bind","event","getSelectedState","setState","target","value","console","log","render","states","map","stateName","iso2","name","mapDispatchToProps","dispatch","input","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE;AADJ,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEiB,QAAZD,YAAY,CAACE,KAAD,EAAQ;AACxB,UAAM;AAAEH,MAAAA;AAAF,QAAoB,KAAKD,KAA/B;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAuB,KAAKN,KAAlC;AACA,SAAKO,QAAL,CAAc;AAACL,MAAAA,aAAa,EAAEG,KAAK,CAACG,MAAN,CAAaC;AAA7B,KAAd;AACA,UAAMH,gBAAgB,CAACJ,aAAD,CAAtB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,aAAZ;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKb,KAAxB;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAoB,KAAKD,KAA/B;AACA,wBACE;AAAQ,MAAA,KAAK,EAAGC,aAAhB;AAAgC,MAAA,QAAQ,EAAE,KAAKC,YAA/C;AAAA,gBACIU,MAAM,CAACC,GAAP,CAAYC,SAAD,IAAgB;AAC3B,4BACA;AACE,UAAA,KAAK,EAAEA,SAAS,CAACC,IADnB;AAAA,oBAIK,GAAED,SAAS,CAACE,IAAK,MAAKF,SAAS,CAACC,IAAK;AAJ1C,WAEQD,SAAS,CAACE,IAFlB;AAAA;AAAA;AAAA;AAAA,gBADA;AAOD,OARC;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAlCiC;;AAqCpC,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCb,EAAAA,gBAAgB,EAAGc,KAAD,IAAWD,QAAQ,CAACtB,gBAAgB,CAACuB,KAAD,CAAjB;AADG,CAAf,CAA3B;;AAIA,MAAMC,eAAe,GAAIpB,KAAD,KAAY;AAClCY,EAAAA,MAAM,EAAEZ,KAAK,CAACY,MAAN,CAAaA,MADa;AAElCX,EAAAA,aAAa,EAAED,KAAK,CAACC,aAAN,CAAoBA;AAFD,CAAZ,CAAxB;;AAKA,eAAeN,OAAO,CAACyB,eAAD,EAAkBH,kBAAlB,CAAP,CAA6CpB,WAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setSelectedState } from '../redux/actions';\n\nclass SelectState extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedState: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async handleChange(event) {\n    const { selectedState } = this.state\n    const { getSelectedState } = this.props\n    this.setState({selectedState: event.target.value});\n    await getSelectedState(selectedState);\n    console.log(selectedState)\n  }\n\n  render() {\n    const { states } = this.props;\n    const { selectedState } = this.state;\n    return(\n      <select value={ selectedState } onChange={this.handleChange}>\n        { states.map((stateName,) => {\n          return (\n          <option\n            value={stateName.iso2}\n            key={ stateName.name }\n          >\n            { `${stateName.name} - ${stateName.iso2}` }\n          </option>);\n        })\n     }\n      </select>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getSelectedState: (input) => dispatch(setSelectedState(input)),\n});\n\nconst mapStateToProps = (state) => ({\n  states: state.states.states,\n  selectedState: state.selectedState.selectedState,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectState);\n"]},"metadata":{},"sourceType":"module"}