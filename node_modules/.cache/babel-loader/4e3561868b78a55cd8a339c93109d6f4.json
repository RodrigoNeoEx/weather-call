{"ast":null,"code":"var _jsxFileName = \"/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectCity.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestCityAPI } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass SelectCity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCity: '',\n      city: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      selectedCity: event.target.value\n    });\n  }\n\n  async requestCitys() {\n    const {\n      country,\n      getCitys,\n      selectedState,\n      city\n    } = this.props;\n    await getCitys(country, selectedState);\n    city.map((cityName, index) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cityName.name,\n        children: cityName.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this);\n    });\n  }\n\n  render() {\n    const {\n      city,\n      states,\n      country\n    } = this.props;\n    const {\n      selectedCity\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit your state\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCity,\n        onChange: this.handleChange,\n        children: console.log(states, country)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  city: state.city.city // selectedState: state.selectedState.selectedState,\n  // country: state.country.country,\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCitys: (countryIso, stateIso) => dispatch(requestCityAPI(countryIso, stateIso))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectCity);","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectCity.jsx"],"names":["React","Component","connect","requestCityAPI","SelectCity","constructor","props","state","selectedCity","city","handleChange","bind","event","setState","target","value","requestCitys","country","getCitys","selectedState","map","cityName","index","name","render","states","console","log","mapStateToProps","mapDispatchToProps","dispatch","countryIso","stateIso"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AACjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,EADH;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AAACL,MAAAA,YAAY,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAA5B,KAAd;AACD;;AAEiB,QAAZC,YAAY,GAAG;AACnB,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA,aAArB;AAAoCV,MAAAA;AAApC,QAA6C,KAAKH,KAAxD;AACA,UAAMY,QAAQ,CAACD,OAAD,EAAUE,aAAV,CAAd;AACAV,IAAAA,IAAI,CAACW,GAAL,CAAS,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC5B,0BACA;AACE,QAAA,KAAK,EAAED,QAAQ,CAACE,IADlB;AAAA,kBAIIF,QAAQ,CAACE;AAJb,SAEQD,KAFR;AAAA;AAAA;AAAA;AAAA,cADA;AAOD,KARD;AASD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,IAAF;AAAQgB,MAAAA,MAAR;AAAgBR,MAAAA;AAAhB,QAA4B,KAAKX,KAAvC;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAmB,KAAKD,KAA9B;AACA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEA;AAAQ,QAAA,KAAK,EAAGC,YAAhB;AAA+B,QAAA,QAAQ,EAAE,KAAKE,YAA9C;AAAA,kBACIgB,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoBR,OAApB;AADJ;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADF;AAQD;;AAvCgC;;AA0CnC,MAAMW,eAAe,GAAIrB,KAAD,KAAY;AAClCE,EAAAA,IAAI,EAAEF,KAAK,CAACE,IAAN,CAAWA,IADiB,CAElC;AACA;;AAHkC,CAAZ,CAAxB;;AAMA,MAAMoB,kBAAkB,GAAIC,QAAD,KAAe;AACxCZ,EAAAA,QAAQ,EAAE,CAACa,UAAD,EAAaC,QAAb,KAA0BF,QAAQ,CAAC3B,cAAc,CAAC4B,UAAD,EAAaC,QAAb,CAAf;AADJ,CAAf,CAA3B;;AAIA,eAAe9B,OAAO,CAAC0B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CzB,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestCityAPI } from '../redux/actions';\n\nclass SelectCity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCity: '',\n      city: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({selectedCity: event.target.value});\n  }\n\n  async requestCitys() {\n    const { country, getCitys, selectedState, city } = this.props;\n    await getCitys(country, selectedState);\n    city.map((cityName, index) => {\n      return (\n      <option\n        value={cityName.name}\n        key={ index }\n      >\n        { cityName.name }\n      </option>);\n    })\n  }\n\n  render() {\n    const { city, states, country } = this.props;\n    const { selectedCity } = this.state;\n    return(\n      <>\n        <button >Submit your state</button>\n      <select value={ selectedCity } onChange={this.handleChange}>\n        { console.log(states, country) }\n      </select>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  city: state.city.city,\n  // selectedState: state.selectedState.selectedState,\n  // country: state.country.country,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCitys: (countryIso, stateIso) => dispatch(requestCityAPI(countryIso, stateIso)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectCity);\n"]},"metadata":{},"sourceType":"module"}