{"ast":null,"code":"var _jsxFileName = \"/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectCity.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SelectCity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCity: '',\n      city: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.createCityOptions = this.createCityOptions.bind(this);\n  }\n\n  handleChange(event) {\n    const {\n      selectedCity\n    } = this.props;\n    this.setState({\n      selectedCity: event.target.value\n    });\n    console.log(selectedCity);\n  }\n\n  createCityOptions() {\n    const {\n      city\n    } = this.props;\n    console.log(city);\n\n    switch (city) {\n      case city.lenght === undefined:\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 16\n        }, this);\n\n      case city.lenght !== undefined:\n        return this.createOptions();\n\n      default:\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 16\n        }, this);\n    }\n  }\n\n  createOptions() {\n    const {\n      city\n    } = this.props;\n    return city.map((cityName, index) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cityName.name,\n        children: cityName.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this);\n    });\n  }\n\n  render() {\n    const {\n      selectedCity\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedCity,\n      onChange: this.handleChange,\n      children: this.createCityOptions()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  city: state.city.city\n});\n\nexport default connect(mapStateToProps)(SelectCity);","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectCity.jsx"],"names":["React","Component","connect","SelectCity","constructor","props","state","selectedCity","city","handleChange","bind","createCityOptions","event","setState","target","value","console","log","lenght","undefined","createOptions","map","cityName","index","name","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,EADH;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB,UAAM;AAAEL,MAAAA;AAAF,QAAmB,KAAKF,KAA9B;AACA,SAAKQ,QAAL,CAAc;AAACN,MAAAA,YAAY,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAA5B,KAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AACD;;AAEDI,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEH,MAAAA;AAAF,QAAW,KAAKH,KAAtB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;;AACA,YAAQA,IAAR;AACE,WAAKA,IAAI,CAACU,MAAL,KAAgBC,SAArB;AACE,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF,WAAKX,IAAI,CAACU,MAAL,KAAgBC,SAArB;AACE,eAAO,KAAKC,aAAL,EAAP;;AACF;AACE,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AANJ;AAQD;;AAEDA,EAAAA,aAAa,GAAG;AACd,UAAM;AAAEZ,MAAAA;AAAF,QAAW,KAAKH,KAAtB;AACA,WAAOG,IAAI,CAACa,GAAL,CAAS,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACnC,0BACA;AACE,QAAA,KAAK,EAAED,QAAQ,CAACE,IADlB;AAAA,kBAIIF,QAAQ,CAACE;AAJb,SAEQD,KAFR;AAAA;AAAA;AAAA;AAAA,cADA;AAOD,KARM,CAAP;AASD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAElB,MAAAA;AAAF,QAAmB,KAAKD,KAA9B;AACA,wBACE;AAAQ,MAAA,KAAK,EAAGC,YAAhB;AAA+B,MAAA,QAAQ,EAAE,KAAKE,YAA9C;AAAA,gBACG,KAAKE,iBAAL;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAlDgC;;AAqDnC,MAAMe,eAAe,GAAIpB,KAAD,KAAY;AAClCE,EAAAA,IAAI,EAAEF,KAAK,CAACE,IAAN,CAAWA;AADiB,CAAZ,CAAxB;;AAIA,eAAeN,OAAO,CAACwB,eAAD,CAAP,CAAyBvB,UAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass SelectCity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCity: '',\n      city: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.createCityOptions = this.createCityOptions.bind(this);\n  }\n\n  handleChange(event) {\n    const { selectedCity } = this.props\n    this.setState({selectedCity: event.target.value});\n    console.log(selectedCity)\n  }\n\n  createCityOptions() {\n    const { city } = this.props;\n    console.log(city)\n    switch (city) {\n      case city.lenght === undefined:\n        return <option>Loading...</option>;\n      case city.lenght !== undefined:\n        return this.createOptions();\n      default:\n        return <option>Loading...</option>;\n    }\n  }\n\n  createOptions() {\n    const { city } = this.props;\n    return city.map((cityName, index) => {\n      return (\n      <option\n        value={cityName.name}\n        key={ index }\n      >\n        { cityName.name }\n      </option>);\n    })\n  }\n\n  render() {\n    const { selectedCity } = this.state;\n    return(\n      <select value={ selectedCity } onChange={this.handleChange}>\n        {this.createCityOptions()}\n      </select>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  city: state.city.city,\n});\n\nexport default connect(mapStateToProps)(SelectCity);\n"]},"metadata":{},"sourceType":"module"}