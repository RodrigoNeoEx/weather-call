{"ast":null,"code":"var _jsxFileName = \"/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/ShowSearch.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestWeatherAPI } from '../redux/actions';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowSearch = ({\n  getWeather,\n  selectedCity,\n  country,\n  selectedState\n}) => {\n  var _s = $RefreshSig$();\n\n  const requestWeather = async event => {\n    _s();\n\n    event.preventDefault(); // await getWeather(selectedCity, country.iso2);\n\n    return useHistory().push(\"/Weather\");\n  };\n\n  _s(requestWeather, \"ebO9cvF3Ou0GZnyLIaifBK5vWck=\", false, function () {\n    return [useHistory];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"showResult\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"searchResult\",\n      children: [`Country: ${country.iso2}`, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 38\n      }, this), `State: ${selectedState}`, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 37\n      }, this), `City: ${selectedCity}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), typeof selectedCity === \"string\" && selectedCity.length > 0 ? /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/Weather\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submitSearch\",\n        type: \"button\",\n        onClick: requestWeather,\n        children: \"See the weather at this location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"submitSearch\",\n      children: \"Choose Country, State and City before search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ShowSearch;\n\nconst mapStateToProps = state => ({\n  country: state.country.country,\n  selectedCity: state.selectedCity.citySelected,\n  selectedState: state.selectedState.stateSelected,\n  weather: state.weather.weather\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getWeather: (selectedCity, country) => dispatch(requestWeatherAPI(selectedCity, country))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowSearch);\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowSearch\");","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/ShowSearch.jsx"],"names":["React","Component","connect","requestWeatherAPI","Link","Redirect","useHistory","ShowSearch","getWeather","selectedCity","country","selectedState","requestWeather","event","preventDefault","push","iso2","length","mapStateToProps","state","citySelected","stateSelected","weather","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,UAAzB,QAA2C,kBAA3C;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,YAAd;AAA4BC,EAAAA,OAA5B;AAAqCC,EAAAA;AAArC,CAAD,KAA0D;AAAA;;AAE3E,QAAMC,cAAc,GAAG,MAAOC,KAAP,IAAiB;AAAA;;AACtCA,IAAAA,KAAK,CAACC,cAAN,GADsC,CAEtC;;AACA,WAAOR,UAAU,GAAGS,IAAb,CAAkB,UAAlB,CAAP;AACD,GAJD;;AAF2E,KAErEH,cAFqE;AAAA,YAKlEN,UALkE;AAAA;;AAQzE,sBACA;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA,iBACI,YAAWI,OAAO,CAACM,IAAK,EAD5B,oBAC+B;AAAA;AAAA;AAAA;AAAA,cAD/B,EAEI,UAASL,aAAc,EAF3B,oBAE8B;AAAA;AAAA;AAAA;AAAA,cAF9B,EAGI,SAAQF,YAAa,EAHzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAMI,OAAOA,YAAP,KAA0B,QAA1B,IAAsCA,YAAY,CAACQ,MAAb,GAAsB,CAA5D,gBAEE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAEL,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,gBAYA;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAsBD,CA9BH;;KAAML,U;;AAiCN,MAAMW,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,OAAO,EAAES,KAAK,CAACT,OAAN,CAAcA,OADW;AAElCD,EAAAA,YAAY,EAAEU,KAAK,CAACV,YAAN,CAAmBW,YAFC;AAGlCT,EAAAA,aAAa,EAAEQ,KAAK,CAACR,aAAN,CAAoBU,aAHD;AAIlCC,EAAAA,OAAO,EAAEH,KAAK,CAACG,OAAN,CAAcA;AAJW,CAAZ,CAAxB;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxChB,EAAAA,UAAU,EAAE,CAACC,YAAD,EAAeC,OAAf,KAA2Bc,QAAQ,CAACrB,iBAAiB,CAACM,YAAD,EAAeC,OAAf,CAAlB;AADP,CAAf,CAA3B;;AAIA,eAAeR,OAAO,CAACgB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6ChB,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestWeatherAPI } from '../redux/actions';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\n\nconst ShowSearch = ({ getWeather, selectedCity, country, selectedState }) => {\n\n  const requestWeather = async (event) => {\n    event.preventDefault()\n    // await getWeather(selectedCity, country.iso2);\n    return useHistory().push(\"/Weather\");\n  }\n\n    return(\n    <section className=\"showResult\">\n      <span className=\"searchResult\">\n        {`Country: ${country.iso2}`} <br/>\n        {`State: ${selectedState}`} <br/>\n        {`City: ${selectedCity}` }\n      </span>\n      { typeof(selectedCity) ===  \"string\" && selectedCity.length > 0\n        ? (\n          <Link to=\"/Weather\">\n            <button\n              className=\"submitSearch\"\n              type=\"button\"\n              onClick={requestWeather}\n            >\n              See the weather at this location\n            </button>\n          </Link>\n          )\n      : <span className=\"submitSearch\">Choose Country, State and City before search</span>\n      }\n    </section>)\n  }\n\n\nconst mapStateToProps = (state) => ({\n  country: state.country.country,\n  selectedCity: state.selectedCity.citySelected,\n  selectedState: state.selectedState.stateSelected,\n  weather: state.weather.weather,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getWeather: (selectedCity, country) => dispatch(requestWeatherAPI(selectedCity, country)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowSearch);"]},"metadata":{},"sourceType":"module"}