{"ast":null,"code":"var _jsxFileName = \"/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectCity.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SelectCity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCity: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const {\n      selectedCity\n    } = this.props;\n    this.setState({\n      selectedCity: event.target.value\n    });\n    console.log(selectedCity);\n  }\n\n  render() {\n    const {\n      selectedState\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      value: this.state.selectedCity,\n      onChange: this.handleChange,\n      children: selectedState ? selectedState.map((cityName, index) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cityName.name,\n          children: cityName.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  selectedState: state.selectedState.selectedState\n});\n\nexport default connect(mapStateToProps)(SelectCity);","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectCity.jsx"],"names":["React","Component","connect","SelectCity","constructor","props","state","selectedCity","handleChange","bind","event","setState","target","value","console","log","render","selectedState","map","cityName","index","name","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE;AADH,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAClB,UAAM;AAAEH,MAAAA;AAAF,QAAmB,KAAKF,KAA9B;AACA,SAAKM,QAAL,CAAc;AAACJ,MAAAA,YAAY,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAA5B,KAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,YAAZ;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAoB,KAAKZ,KAA/B;AACA,wBACE;AAAQ,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,YAA1B;AAAwC,MAAA,QAAQ,EAAE,KAAKC,YAAvD;AAAA,gBACIS,aAAa,GAAGA,aAAa,CAACC,GAAd,CAAkB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACvD,4BACA;AACE,UAAA,KAAK,EAAED,QAAQ,CAACE,IADlB;AAAA,oBAIIF,QAAQ,CAACE;AAJb,WAEQD,KAFR;AAAA;AAAA;AAAA;AAAA,gBADA;AAOD,OARiB,CAAH,gBASb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AA/BgC;;AAkCnC,MAAME,eAAe,GAAIhB,KAAD,KAAY;AAClCW,EAAAA,aAAa,EAAEX,KAAK,CAACW,aAAN,CAAoBA;AADD,CAAZ,CAAxB;;AAIA,eAAef,OAAO,CAACoB,eAAD,CAAP,CAAyBnB,UAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass SelectCity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCity: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { selectedCity } = this.props\n    this.setState({selectedCity: event.target.value});\n    console.log(selectedCity)\n  }\n\n  render() {\n    const { selectedState } = this.props;\n    return(\n      <select value={this.state.selectedCity} onChange={this.handleChange}>\n        { selectedState ? selectedState.map((cityName, index) => {\n          return (\n          <option\n            value={cityName.name}\n            key={ index }\n          >\n            { cityName.name }\n          </option>);\n        })\n        : <option>Loading</option> }\n      </select>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  selectedState: state.selectedState.selectedState,\n});\n\nexport default connect(mapStateToProps)(SelectCity);\n"]},"metadata":{},"sourceType":"module"}