{"ast":null,"code":"var _jsxFileName = \"/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectCity.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestCityAPI } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SelectCity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCity: '',\n      city: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      selectedCity: event.target.value\n    });\n  }\n\n  async requestCitys(states, country) {\n    // const { country, getCitys, states, city } = this.props;\n    console.log(country, states); // await getCitys(country, selectedState);\n    // city.map((cityName, index) => {\n    //   return (\n    //   <option\n    //     value={cityName.name}\n    //     key={ index }\n    //   >\n    //     { cityName.name }\n    //   </option>);\n    // })\n  }\n\n  render() {\n    const {\n      city,\n      states,\n      country\n    } = this.props; // console.log(states, country)\n\n    const {\n      selectedCity\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedCity,\n      onChange: this.handleChange,\n      children: this.requestCitys(states, country)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  city: state.city.city // selectedState: state.selectedState.selectedState,\n  // country: state.country.country,\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCitys: (countryIso, stateIso) => dispatch(requestCityAPI(countryIso, stateIso))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectCity);","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectCity.jsx"],"names":["React","Component","connect","requestCityAPI","SelectCity","constructor","props","state","selectedCity","city","handleChange","bind","event","setState","target","value","requestCitys","states","country","console","log","render","mapStateToProps","mapDispatchToProps","dispatch","getCitys","countryIso","stateIso"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AACjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,EADH;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AAACL,MAAAA,YAAY,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAA5B,KAAd;AACD;;AAEiB,QAAZC,YAAY,CAACC,MAAD,EAASC,OAAT,EAAkB;AAClC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAAqBD,MAArB,EAFkC,CAGlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,IAAF;AAAQQ,MAAAA,MAAR;AAAgBC,MAAAA;AAAhB,QAA4B,KAAKZ,KAAvC,CADO,CAEP;;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAmB,KAAKD,KAA9B;AACA,wBACE;AAAQ,MAAA,KAAK,EAAGC,YAAhB;AAA+B,MAAA,QAAQ,EAAE,KAAKE,YAA9C;AAAA,gBACI,KAAKM,YAAL,CAAkBC,MAAlB,EAA0BC,OAA1B;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAtCgC;;AAyCnC,MAAMI,eAAe,GAAIf,KAAD,KAAY;AAClCE,EAAAA,IAAI,EAAEF,KAAK,CAACE,IAAN,CAAWA,IADiB,CAElC;AACA;;AAHkC,CAAZ,CAAxB;;AAMA,MAAMc,kBAAkB,GAAIC,QAAD,KAAe;AACxCC,EAAAA,QAAQ,EAAE,CAACC,UAAD,EAAaC,QAAb,KAA0BH,QAAQ,CAACrB,cAAc,CAACuB,UAAD,EAAaC,QAAb,CAAf;AADJ,CAAf,CAA3B;;AAIA,eAAezB,OAAO,CAACoB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CnB,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestCityAPI } from '../redux/actions';\n\nclass SelectCity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCity: '',\n      city: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({selectedCity: event.target.value});\n  }\n\n  async requestCitys(states, country) {\n    // const { country, getCitys, states, city } = this.props;\n    console.log(country, states)\n    // await getCitys(country, selectedState);\n    // city.map((cityName, index) => {\n    //   return (\n    //   <option\n    //     value={cityName.name}\n    //     key={ index }\n    //   >\n    //     { cityName.name }\n    //   </option>);\n    // })\n  }\n\n  render() {\n    const { city, states, country } = this.props;\n    // console.log(states, country)\n    const { selectedCity } = this.state;\n    return(\n      <select value={ selectedCity } onChange={this.handleChange}>\n        { this.requestCitys(states, country)  }\n      </select>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  city: state.city.city,\n  // selectedState: state.selectedState.selectedState,\n  // country: state.country.country,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCitys: (countryIso, stateIso) => dispatch(requestCityAPI(countryIso, stateIso)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectCity);\n"]},"metadata":{},"sourceType":"module"}