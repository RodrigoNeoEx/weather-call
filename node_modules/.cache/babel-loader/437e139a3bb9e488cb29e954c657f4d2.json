{"ast":null,"code":"var _jsxFileName = \"/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/ShowSearch.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestWeatherAPI } from '../redux/actions'; // import { Link } from 'react-router-dom';\n\nimport { withRouter } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShowSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.requestWeather = this.requestWeather.bind(this);\n  }\n\n  async requestWeather() {\n    const {\n      getWeather,\n      selectedCity,\n      country\n    } = this.props;\n    await getWeather(selectedCity, country.iso2);\n    let svg = document.getElementsByClassName('svg1');\n    svg.classList = 'loadingON';\n  }\n\n  render() {\n    const {\n      country,\n      selectedState,\n      selectedCity,\n      history\n    } = this.props;\n    const timer = 5000;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"showResult\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"searchResult\",\n        children: [`Country: ${country.iso2}`, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 38\n        }, this), `State: ${selectedState}`, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 37\n        }, this), `City: ${selectedCity}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), typeof selectedCity === \"string\" && selectedCity.length > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submitSearch\",\n        type: \"button\",\n        onClick: () => {\n          this.requestWeather();\n          setTimeout(() => history.push('/Weather'), timer);\n        },\n        children: \"See the weather at this location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"submitSearch\",\n        children: \"Choose Country, State and City before search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  country: state.country.country,\n  selectedCity: state.selectedCity.citySelected,\n  selectedState: state.selectedState.stateSelected,\n  weather: state.weather.weather\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getWeather: (selectedCity, country) => dispatch(requestWeatherAPI(selectedCity, country))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ShowSearch));","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/ShowSearch.jsx"],"names":["React","Component","connect","requestWeatherAPI","withRouter","ShowSearch","constructor","props","requestWeather","bind","getWeather","selectedCity","country","iso2","svg","document","getElementsByClassName","classList","render","selectedState","history","timer","length","setTimeout","push","mapStateToProps","state","citySelected","stateSelected","weather","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,kBAAlC,C,CACA;;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AACjCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEmB,QAAdD,cAAc,GAAG;AACrB,UAAM;AAAEE,MAAAA,UAAF;AAAcC,MAAAA,YAAd;AAA4BC,MAAAA;AAA5B,QAA0C,KAAKL,KAArD;AACA,UAAMG,UAAU,CAACC,YAAD,EAAeC,OAAO,CAACC,IAAvB,CAAhB;AACA,QAAIC,GAAG,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,MAAhC,CAAV;AACAF,IAAAA,GAAG,CAACG,SAAJ,GAAe,WAAf;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA,OAAF;AAAWO,MAAAA,aAAX;AAA0BR,MAAAA,YAA1B;AAAwCS,MAAAA;AAAxC,QAAoD,KAAKb,KAA/D;AACA,UAAMc,KAAK,GAAG,IAAd;AACA,wBACA;AAAS,MAAA,SAAS,EAAC,YAAnB;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA,mBACI,YAAWT,OAAO,CAACC,IAAK,EAD5B,oBAC+B;AAAA;AAAA;AAAA;AAAA,gBAD/B,EAEI,UAASM,aAAc,EAF3B,oBAE8B;AAAA;AAAA;AAAA;AAAA,gBAF9B,EAGI,SAAQR,YAAa,EAHzB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAMI,OAAOA,YAAP,KAA0B,QAA1B,IAAsCA,YAAY,CAACW,MAAb,GAAsB,CAA5D,gBAEI;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAG,MAAM;AACd,eAAKd,cAAL;AACAe,UAAAA,UAAU,CAAC,MAAMH,OAAO,CAACI,IAAR,CAAa,UAAb,CAAP,EAAiCH,KAAjC,CAAV;AACD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,gBAeA;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAyBD;;AAzCgC;;AA4CnC,MAAMI,eAAe,GAAIC,KAAD,KAAY;AAClCd,EAAAA,OAAO,EAAEc,KAAK,CAACd,OAAN,CAAcA,OADW;AAElCD,EAAAA,YAAY,EAAEe,KAAK,CAACf,YAAN,CAAmBgB,YAFC;AAGlCR,EAAAA,aAAa,EAAEO,KAAK,CAACP,aAAN,CAAoBS,aAHD;AAIlCC,EAAAA,OAAO,EAAEH,KAAK,CAACG,OAAN,CAAcA;AAJW,CAAZ,CAAxB;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCrB,EAAAA,UAAU,EAAE,CAACC,YAAD,EAAeC,OAAf,KAA2BmB,QAAQ,CAAC5B,iBAAiB,CAACQ,YAAD,EAAeC,OAAf,CAAlB;AADP,CAAf,CAA3B;;AAIA,eAAeV,OAAO,CAACuB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6C1B,UAAU,CAACC,UAAD,CAAvD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestWeatherAPI } from '../redux/actions';\n// import { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\n\nclass ShowSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.requestWeather = this.requestWeather.bind(this)\n  }\n\n  async requestWeather() {\n    const { getWeather, selectedCity, country,  } = this.props;\n    await getWeather(selectedCity, country.iso2);\n    let svg = document.getElementsByClassName('svg1');\n    svg.classList= 'loadingON';\n  }\n\n  render() {\n    const { country, selectedState, selectedCity, history } = this.props;\n    const timer = 5000;\n    return(\n    <section className=\"showResult\">\n      <span className=\"searchResult\">\n        {`Country: ${country.iso2}`} <br/>\n        {`State: ${selectedState}`} <br/>\n        {`City: ${selectedCity}` }\n      </span>\n      { typeof(selectedCity) ===  \"string\" && selectedCity.length > 0\n        ? (\n            <button\n              className=\"submitSearch\"\n              type=\"button\"\n              onClick={ () => {\n                this.requestWeather();\n                setTimeout(() => history.push('/Weather'), timer);\n              }\n            }\n            >\n              See the weather at this location\n            </button>\n\n          )\n      : <span className=\"submitSearch\">Choose Country, State and City before search</span>\n      }\n    </section>)\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  country: state.country.country,\n  selectedCity: state.selectedCity.citySelected,\n  selectedState: state.selectedState.stateSelected,\n  weather: state.weather.weather,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getWeather: (selectedCity, country) => dispatch(requestWeatherAPI(selectedCity, country)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ShowSearch));\n"]},"metadata":{},"sourceType":"module"}