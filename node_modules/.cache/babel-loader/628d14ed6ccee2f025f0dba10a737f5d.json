{"ast":null,"code":"var _jsxFileName = \"/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/pages/Weather.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Weather = ({\n  weather,\n  selectedState\n}) => {\n  _s();\n\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [weather].map(wInfo => {\n      return /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => history.push('/'),\n              children: \"New Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: `Country: ${wInfo.sys.country} - State: ${selectedState}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: `City: ${wInfo.name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Current time: GMT -3 07:24pm \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${wInfo.weather[0].main} - ${wInfo.weather[0].description} `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `Current Temperature: ${(wInfo.main.temp - 273.1).toFixed(1)}°C`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `Feels like Temperature: ${(wInfo.main.feels_like - 273.1).toFixed(1)}°C`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `Max Temperature: ${(wInfo.main.temp_max - 273.1).toFixed(1)}°C`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `Min Temperature: ${(wInfo.main.temp_min - 273.1).toFixed(1)}°C`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)]\n      }, wInfo.cod, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(Weather, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Weather;\n\nconst mapStateToProps = state => ({\n  weather: state.weather.weather,\n  selectedState: state.selectedState.stateSelected\n});\n\nexport default connect(mapStateToProps)(Weather);\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/pages/Weather.jsx"],"names":["React","connect","useHistory","Weather","weather","selectedState","history","map","wInfo","push","sys","country","name","main","description","temp","toFixed","feels_like","temp_max","temp_min","cod","mapStateToProps","state","stateSelected"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAgC;AAAA;;AAC9C,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,sBACE;AAAA,cACI,CAACE,OAAD,EAAUG,GAAV,CAAeC,KAAD,IAAW;AAC3B,0BACA;AAAA,gCACE;AAAA,kCACE;AAAA,mCACE;AACA,cAAA,IAAI,EAAC,QADL;AAEA,cAAA,OAAO,EAAG,MAAMF,OAAO,CAACG,IAAR,CAAa,GAAb,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAA,sBACI,YAAWD,KAAK,CAACE,GAAN,CAAUC,OAAQ,aAAYN,aAAc;AAD3D;AAAA;AAAA;AAAA;AAAA,kBARF,eAWE;AAAA,sBAAM,SAAQG,KAAK,CAACI,IAAK;AAAzB;AAAA;AAAA;AAAA;AAAA,kBAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE;AAAA,kCACE;AAAA,sBAAK,GAAEJ,KAAK,CAACJ,OAAN,CAAc,CAAd,EAAiBS,IAAK,MAAKL,KAAK,CAACJ,OAAN,CAAc,CAAd,EAAiBU,WAAY;AAA/D;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAK,wBAAuB,CAAEN,KAAK,CAACK,IAAN,CAAWE,IAAZ,GAAmB,KAApB,EAA2BC,OAA3B,CAAmC,CAAnC,CAAsC;AAAlE;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAK,2BAA0B,CAAER,KAAK,CAACK,IAAN,CAAWI,UAAZ,GAAyB,KAA1B,EAAiCD,OAAjC,CAAyC,CAAzC,CAA4C;AAA3E;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,sBAAK,oBAAmB,CAAER,KAAK,CAACK,IAAN,CAAWK,QAAZ,GAAuB,KAAxB,EAA+BF,OAA/B,CAAuC,CAAvC,CAA0C;AAAlE;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA,sBAAK,oBAAmB,CAAER,KAAK,CAACK,IAAN,CAAWM,QAAZ,GAAuB,KAAxB,EAA+BH,OAA/B,CAAuC,CAAvC,CAA0C;AAAlE;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA,SAAWR,KAAK,CAACY,GAAjB;AAAA;AAAA;AAAA;AAAA,cADA;AAwBD,KAzBG;AADJ,mBADF;AA8BD,CAhCD;;GAAMjB,O;UACYD,U;;;KADZC,O;;AAkCN,MAAMkB,eAAe,GAAIC,KAAD,KAAY;AAClClB,EAAAA,OAAO,EAAEkB,KAAK,CAAClB,OAAN,CAAcA,OADW;AAElCC,EAAAA,aAAa,EAAEiB,KAAK,CAACjB,aAAN,CAAoBkB;AAFD,CAAZ,CAAxB;;AAKA,eAAetB,OAAO,CAACoB,eAAD,CAAP,CAAyBlB,OAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nconst Weather = ({ weather, selectedState }) => {\n  const history = useHistory()\n  return (\n    <>\n      { [weather].map((wInfo) => {\n      return (\n      <main key={wInfo.cod}>\n        <header>\n          <nav>\n            <button\n            type=\"button\"\n            onClick={ () => history.push('/')}>\n              New Search\n            </button>\n          </nav>\n          <h1>\n            {`Country: ${wInfo.sys.country} - State: ${selectedState}`}\n          </h1>\n          <h1>{`City: ${wInfo.name}`}</h1>\n          <h3>Current time: GMT -3 07:24pm </h3>\n        </header>\n        <section>\n          <p>{`${wInfo.weather[0].main} - ${wInfo.weather[0].description} `}</p>\n          <p>{`Current Temperature: ${((wInfo.main.temp)- 273.1).toFixed(1)}°C`}</p>\n          <p>{`Feels like Temperature: ${((wInfo.main.feels_like)- 273.1).toFixed(1)}°C`}</p>\n          <p>{`Max Temperature: ${((wInfo.main.temp_max)- 273.1).toFixed(1)}°C`}</p>\n          <p>{`Min Temperature: ${((wInfo.main.temp_min)- 273.1).toFixed(1)}°C`}</p>\n        </section>\n      </main>)\n    })}\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  weather: state.weather.weather,\n  selectedState: state.selectedState.stateSelected,\n});\n\nexport default connect(mapStateToProps)(Weather);\n"]},"metadata":{},"sourceType":"module"}