{"ast":null,"code":"var _jsxFileName = \"/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/ShowSearch.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestWeatherAPI } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShowSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.requestWeather = this.requestWeather.bind(this);\n  }\n\n  requestWeather() {\n    const {\n      getWeather,\n      selectedCity,\n      country,\n      history\n    } = this.props;\n    getWeather(selectedCity, country);\n    const timer = 3000;\n    setTimeout(() => history.push('/Weather'), timer);\n  }\n\n  render() {\n    const {\n      country,\n      selectedState,\n      selectedCity\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"showResult\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"searchResult\",\n        children: [`Country: ${country.iso2}`, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 38\n        }, this), `State: ${selectedState}`, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 37\n        }, this), `City: ${selectedCity}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submitSearch\",\n        type: \"button\",\n        onClick: this.requestWeather,\n        children: \"See the weather at this location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  country: state.country.country,\n  selectedCity: state.selectedCity.citySelected,\n  selectedState: state.selectedState.stateSelected\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getWeather: (selectedCity, country) => dispatch(requestWeatherAPI(selectedCity, country))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowSearch);","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/ShowSearch.jsx"],"names":["React","Component","connect","requestWeatherAPI","ShowSearch","constructor","props","requestWeather","bind","getWeather","selectedCity","country","history","timer","setTimeout","push","render","selectedState","iso2","mapStateToProps","state","citySelected","stateSelected","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AACjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDD,EAAAA,cAAc,GAAG;AACf,UAAM;AAAEE,MAAAA,UAAF;AAAcC,MAAAA,YAAd;AAA4BC,MAAAA,OAA5B;AAAqCC,MAAAA;AAArC,QAAiD,KAAKN,KAA5D;AACAG,IAAAA,UAAU,CAACC,YAAD,EAAeC,OAAf,CAAV;AACA,UAAME,KAAK,GAAG,IAAd;AACAC,IAAAA,UAAU,CAAC,MAAMF,OAAO,CAACG,IAAR,CAAa,UAAb,CAAP,EAAiCF,KAAjC,CAAV;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA,OAAF;AAAWM,MAAAA,aAAX;AAA0BP,MAAAA;AAA1B,QAA2C,KAAKJ,KAAtD;AACA,wBACA;AAAS,MAAA,SAAS,EAAC,YAAnB;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA,mBACI,YAAWK,OAAO,CAACO,IAAK,EAD5B,oBAC+B;AAAA;AAAA;AAAA;AAAA,gBAD/B,EAEI,UAASD,aAAc,EAF3B,oBAE8B;AAAA;AAAA;AAAA;AAAA,gBAF9B,EAGI,SAAQP,YAAa,EAHzB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAE,KAAKH,cAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAeD;;AA9BgC;;AAiCnC,MAAMY,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,OAAO,EAAES,KAAK,CAACT,OAAN,CAAcA,OADW;AAElCD,EAAAA,YAAY,EAAEU,KAAK,CAACV,YAAN,CAAmBW,YAFC;AAGlCJ,EAAAA,aAAa,EAAEG,KAAK,CAACH,aAAN,CAAoBK;AAHD,CAAZ,CAAxB;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCf,EAAAA,UAAU,EAAE,CAACC,YAAD,EAAeC,OAAf,KAA2Ba,QAAQ,CAACrB,iBAAiB,CAACO,YAAD,EAAeC,OAAf,CAAlB;AADP,CAAf,CAA3B;;AAIA,eAAeT,OAAO,CAACiB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CnB,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestWeatherAPI } from '../redux/actions';\n\nclass ShowSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.requestWeather = this.requestWeather.bind(this)\n  }\n\n  requestWeather() {\n    const { getWeather, selectedCity, country, history } = this.props;\n    getWeather(selectedCity, country);\n    const timer = 3000;\n    setTimeout(() => history.push('/Weather'), timer);\n  }\n\n  render() {\n    const { country, selectedState, selectedCity } = this.props\n    return(\n    <section className=\"showResult\">\n      <span className=\"searchResult\">\n        {`Country: ${country.iso2}`} <br/>\n        {`State: ${selectedState}`} <br/>\n        {`City: ${selectedCity}` }\n      </span>\n      <button\n        className=\"submitSearch\"\n        type=\"button\"\n        onClick={this.requestWeather}\n      >\n        See the weather at this location\n      </button>\n    </section>)\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  country: state.country.country,\n  selectedCity: state.selectedCity.citySelected,\n  selectedState: state.selectedState.stateSelected,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getWeather: (selectedCity, country) => dispatch(requestWeatherAPI(selectedCity, country)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowSearch);"]},"metadata":{},"sourceType":"module"}