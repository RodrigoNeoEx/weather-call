{"ast":null,"code":"var _jsxFileName = \"/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/ShowSearch.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestWeatherAPI } from '../redux/actions';\nimport { Link, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShowSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.requestWeather = this.requestWeather.bind(this);\n    this.handleOnClick = this.handleOnClick.bind(this);\n  }\n\n  async requestWeather() {\n    const {\n      getWeather,\n      selectedCity,\n      country\n    } = this.props; // await getWeather(selectedCity, country.iso2);\n\n    setTimeout(() => {\n      /*#__PURE__*/\n      _jsxDEV(Redirect, {\n        to: \"/weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this);\n    }, 3000);\n  }\n\n  handleOnClick() {// and after timeout\n    // 3000 means 3 seconds\n  }\n\n  render() {\n    const {\n      country,\n      selectedState,\n      selectedCity\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"showResult\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"searchResult\",\n        children: [`Country: ${country.iso2}`, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 38\n        }, this), `State: ${selectedState}`, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 37\n        }, this), `City: ${selectedCity}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), typeof selectedCity === \"string\" && selectedCity.length > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submitSearch\",\n        type: \"button\",\n        onClick: this.requestWeather,\n        children: \"See the weather at this location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"submitSearch\",\n        children: \"Choose Country, State and City before search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  country: state.country.country,\n  selectedCity: state.selectedCity.citySelected,\n  selectedState: state.selectedState.stateSelected,\n  weather: state.weather.weather\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getWeather: (selectedCity, country) => dispatch(requestWeatherAPI(selectedCity, country))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowSearch);","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/ShowSearch.jsx"],"names":["React","Component","connect","requestWeatherAPI","Link","Redirect","ShowSearch","constructor","props","requestWeather","bind","handleOnClick","getWeather","selectedCity","country","setTimeout","render","selectedState","iso2","length","mapStateToProps","state","citySelected","stateSelected","weather","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAEEC,IAFF,EAGEC,QAHF,QAIQ,kBAJR;;;AAMA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AACjCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEmB,QAAdD,cAAc,GAAG;AACrB,UAAM;AAAEG,MAAAA,UAAF;AAAcC,MAAAA,YAAd;AAA4BC,MAAAA;AAA5B,QAAwC,KAAKN,KAAnD,CADqB,CAErB;;AACAO,IAAAA,UAAU,CAAC,MAAM;AACf;AAAA,cAAC,QAAD;AACM,QAAA,EAAE,EACD;AAFP;AAAA;AAAA;AAAA;AAAA;AAKD,KANS,EAMP,IANO,CAAV;AAOD;;AAEDJ,EAAAA,aAAa,GAAG,CACd;AACH;AACA;;AAECK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEF,MAAAA,OAAF;AAAWG,MAAAA,aAAX;AAA0BJ,MAAAA;AAA1B,QAA2C,KAAKL,KAAtD;AACA,wBACA;AAAS,MAAA,SAAS,EAAC,YAAnB;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA,mBACI,YAAWM,OAAO,CAACI,IAAK,EAD5B,oBAC+B;AAAA;AAAA;AAAA;AAAA,gBAD/B,EAEI,UAASD,aAAc,EAF3B,oBAE8B;AAAA;AAAA;AAAA;AAAA,gBAF9B,EAGI,SAAQJ,YAAa,EAHzB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAMI,OAAOA,YAAP,KAA0B,QAA1B,IAAsCA,YAAY,CAACM,MAAb,GAAsB,CAA5D,gBAGI;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAG,KAAKV,cAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,gBAYA;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAsBD;;AAhDgC;;AAmDnC,MAAMW,eAAe,GAAIC,KAAD,KAAY;AAClCP,EAAAA,OAAO,EAAEO,KAAK,CAACP,OAAN,CAAcA,OADW;AAElCD,EAAAA,YAAY,EAAEQ,KAAK,CAACR,YAAN,CAAmBS,YAFC;AAGlCL,EAAAA,aAAa,EAAEI,KAAK,CAACJ,aAAN,CAAoBM,aAHD;AAIlCC,EAAAA,OAAO,EAAEH,KAAK,CAACG,OAAN,CAAcA;AAJW,CAAZ,CAAxB;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCd,EAAAA,UAAU,EAAE,CAACC,YAAD,EAAeC,OAAf,KAA2BY,QAAQ,CAACvB,iBAAiB,CAACU,YAAD,EAAeC,OAAf,CAAlB;AADP,CAAf,CAA3B;;AAIA,eAAeZ,OAAO,CAACkB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CnB,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestWeatherAPI } from '../redux/actions';\nimport {\n\n  Link,\n  Redirect,\n } from 'react-router-dom';\n\nclass ShowSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.requestWeather = this.requestWeather.bind(this);\n    this.handleOnClick = this.handleOnClick.bind(this);\n  }\n\n  async requestWeather() {\n    const { getWeather, selectedCity, country } = this.props;\n    // await getWeather(selectedCity, country.iso2);\n    setTimeout(() => {\n      <Redirect\n            to=\n             \"/weather\"\n\n          />\n    }, 3000)\n  }\n\n  handleOnClick() {\n    // and after timeout\n // 3000 means 3 seconds\n};\n\n  render() {\n    const { country, selectedState, selectedCity } = this.props\n    return(\n    <section className=\"showResult\">\n      <span className=\"searchResult\">\n        {`Country: ${country.iso2}`} <br/>\n        {`State: ${selectedState}`} <br/>\n        {`City: ${selectedCity}` }\n      </span>\n      { typeof(selectedCity) ===  \"string\" && selectedCity.length > 0\n        ? (\n\n            <button\n              className=\"submitSearch\"\n              type=\"button\"\n              onClick={ this.requestWeather}\n            >\n             See the weather at this location\n            </button>\n\n          )\n      : <span className=\"submitSearch\">Choose Country, State and City before search</span>\n      }\n    </section>)\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  country: state.country.country,\n  selectedCity: state.selectedCity.citySelected,\n  selectedState: state.selectedState.stateSelected,\n  weather: state.weather.weather,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getWeather: (selectedCity, country) => dispatch(requestWeatherAPI(selectedCity, country)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowSearch);"]},"metadata":{},"sourceType":"module"}