{"ast":null,"code":"var _jsxFileName = \"/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectState.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestStateAPI } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SelectState extends Component {\n  constructor(props) {\n    super(props);\n    this.createOptions = this.createOptions.bind(this);\n  }\n\n  async createOptions() {\n    const {\n      country\n    } = this.props;\n    console.log(country);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.createOptions,\n        children: \"teste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  country: state.country.country,\n  states: state.states.states\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getStates: input => dispatch(requestStateAPI(input))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectState);","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectState.jsx"],"names":["React","Component","connect","requestStateAPI","SelectState","constructor","props","createOptions","bind","country","console","log","render","mapStateToProps","state","states","mapDispatchToProps","dispatch","getStates","input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,kBAAhC;;;AAGA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEkB,QAAbD,aAAa,GAAG;AACpB,UAAM;AAAEE,MAAAA;AAAF,QAAc,KAAKH,KAAzB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAED;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AACA,QAAA,IAAI,EAAC,QADL;AAEA,QAAA,OAAO,EAAG,KAAKL,aAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAvBiC;;AA0BpC,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAClCL,EAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,CAAcA,OADW;AAElCM,EAAAA,MAAM,EAAED,KAAK,CAACC,MAAN,CAAaA;AAFa,CAAZ,CAAxB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCC,EAAAA,SAAS,EAAGC,KAAD,IAAWF,QAAQ,CAACd,eAAe,CAACgB,KAAD,CAAhB;AADU,CAAf,CAA3B;;AAKA,eAAejB,OAAO,CAACW,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CZ,WAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestStateAPI } from '../redux/actions';\n\n\nclass SelectState extends Component {\n  constructor(props) {\n    super(props);\n    this.createOptions = this.createOptions.bind(this);\n  }\n\n  async createOptions() {\n    const { country } = this.props\n    console.log(country)\n\n  }\n\n  render() {\n    return(\n      <div>\n        <button\n        type=\"button\"\n        onClick={ this.createOptions }\n        >\n          teste\n        </button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  country: state.country.country,\n  states: state.states.states,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getStates: (input) => dispatch(requestStateAPI(input)),\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectState);\n"]},"metadata":{},"sourceType":"module"}