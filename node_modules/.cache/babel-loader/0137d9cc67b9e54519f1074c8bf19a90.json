{"ast":null,"code":"var _jsxFileName = \"/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectState.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestStateAPI } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SelectState extends Component {\n  constructor(props) {\n    super(props);\n    this.createOptions = this.createOptions.bind(this);\n  }\n\n  async createOptions() {\n    const {\n      country,\n      getStates\n    } = this.props;\n    console.log(country);\n    await getStates(country.iso2);\n  }\n\n  render() {\n    const {\n      states\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.createOptions,\n        children: \"teste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: states ? states.map((stateName, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: stateName.iso2\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 20\n          }, this);\n        }) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  country: state.country.country,\n  states: state.states.states\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getStates: input => dispatch(requestStateAPI(input))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectState);","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectState.jsx"],"names":["React","Component","connect","requestStateAPI","SelectState","constructor","props","createOptions","bind","country","getStates","console","log","iso2","render","states","map","stateName","index","mapStateToProps","state","mapDispatchToProps","dispatch","input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,kBAAhC;;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEkB,QAAbD,aAAa,GAAG;AACpB,UAAM;AAAEE,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAyB,KAAKJ,KAApC;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,UAAMC,SAAS,CAACD,OAAO,CAACI,IAAT,CAAf;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKT,KAAxB;AACA,wBACE;AAAA,8BACE;AACA,QAAA,IAAI,EAAC,QADL;AAEA,QAAA,OAAO,EAAG,KAAKC,aAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,kBACIQ,MAAM,GAAGA,MAAM,CAACC,GAAP,CAAW,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAC1C,8BAAO;AAAA,sBAAuBD,SAAS,CAACJ;AAAjC,aAAcK,KAAd;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFU,CAAH,GAGN;AAJJ;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AA9BiC;;AAiCpC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,OAAO,EAAEW,KAAK,CAACX,OAAN,CAAcA,OADW;AAElCM,EAAAA,MAAM,EAAEK,KAAK,CAACL,MAAN,CAAaA;AAFa,CAAZ,CAAxB;;AAKA,MAAMM,kBAAkB,GAAIC,QAAD,KAAe;AACxCZ,EAAAA,SAAS,EAAGa,KAAD,IAAWD,QAAQ,CAACnB,eAAe,CAACoB,KAAD,CAAhB;AADU,CAAf,CAA3B;;AAIA,eAAerB,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,WAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestStateAPI } from '../redux/actions';\n\nclass SelectState extends Component {\n  constructor(props) {\n    super(props);\n    this.createOptions = this.createOptions.bind(this);\n  }\n\n  async createOptions() {\n    const { country, getStates } = this.props\n    console.log(country)\n    await getStates(country.iso2)\n  }\n\n  render() {\n    const { states } = this.props;\n    return(\n      <div>\n        <button\n        type=\"button\"\n        onClick={ this.createOptions }\n        >\n          teste\n        </button>\n        <select>\n          { states ? states.map((stateName, index) => {\n            return <option key={ index }>{stateName.iso2}</option>\n          })\n          : ''}\n        </select>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  country: state.country.country,\n  states: state.states.states,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getStates: (input) => dispatch(requestStateAPI(input)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectState);\n"]},"metadata":{},"sourceType":"module"}