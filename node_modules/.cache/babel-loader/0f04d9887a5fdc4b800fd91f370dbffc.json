{"ast":null,"code":"var _jsxFileName = \"/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectState.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestStateAPI } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SelectState extends Component {\n  constructor(props) {\n    super(props);\n    this.createStatesOptions = this.createStatesOptions.bind(this);\n  }\n\n  componentDidUpdate() {\n    this.createStatesOptions();\n  }\n\n  async createStatesOptions() {\n    const {\n      country,\n      getStates\n    } = this.props;\n\n    if (country !== undefined) {\n      await getStates(country.iso2);\n    }\n\n    console.log(this.props);\n  }\n\n  render() {\n    const {\n      states\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.createStatesOptions,\n        children: \"teste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: states ? states.map((stateName, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: stateName.iso2\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 20\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  country: state.country.country,\n  states: state.states.states\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getStates: input => dispatch(requestStateAPI(input))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectState);","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/components/SelectState.jsx"],"names":["React","Component","connect","requestStateAPI","SelectState","constructor","props","createStatesOptions","bind","componentDidUpdate","country","getStates","undefined","iso2","console","log","render","states","map","stateName","index","mapStateToProps","state","mapDispatchToProps","dispatch","input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,kBAAhC;;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKF,mBAAL;AACD;;AAEwB,QAAnBA,mBAAmB,GAAG;AAC1B,UAAM;AAAEG,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAyB,KAAKL,KAApC;;AACA,QAAGI,OAAO,KAAKE,SAAf,EAA2B;AACzB,YAAMD,SAAS,CAACD,OAAO,CAACG,IAAT,CAAf;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKX,KAAxB;AACA,wBACE;AAAA,8BACE;AACA,QAAA,IAAI,EAAC,QADL;AAEA,QAAA,OAAO,EAAG,KAAKC,mBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,kBACIU,MAAM,GAAGA,MAAM,CAACC,GAAP,CAAW,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAC1C,8BAAO;AAAA,sBAAuBD,SAAS,CAACN;AAAjC,aAAcO,KAAd;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFU,CAAH,gBAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AApCiC;;AAuCpC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCZ,EAAAA,OAAO,EAAEY,KAAK,CAACZ,OAAN,CAAcA,OADW;AAElCO,EAAAA,MAAM,EAAEK,KAAK,CAACL,MAAN,CAAaA;AAFa,CAAZ,CAAxB;;AAKA,MAAMM,kBAAkB,GAAIC,QAAD,KAAe;AACxCb,EAAAA,SAAS,EAAGc,KAAD,IAAWD,QAAQ,CAACrB,eAAe,CAACsB,KAAD,CAAhB;AADU,CAAf,CAA3B;;AAIA,eAAevB,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,WAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestStateAPI } from '../redux/actions';\n\nclass SelectState extends Component {\n  constructor(props) {\n    super(props);\n    this.createStatesOptions = this.createStatesOptions.bind(this);\n  }\n\n  componentDidUpdate() {\n    this.createStatesOptions()\n  }\n\n  async createStatesOptions() {\n    const { country, getStates } = this.props\n    if(country !== undefined ) {\n      await getStates(country.iso2)\n    }\n    console.log(this.props)\n  }\n\n  render() {\n    const { states } = this.props;\n    return(\n      <div>\n        <button\n        type=\"button\"\n        onClick={ this.createStatesOptions }\n        >\n          teste\n        </button>\n        <select>\n          { states ? states.map((stateName, index) => {\n            return <option key={ index }>{stateName.iso2}</option>\n          })\n          : <option>Loading</option> }\n        </select>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  country: state.country.country,\n  states: state.states.states,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getStates: (input) => dispatch(requestStateAPI(input)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectState);\n"]},"metadata":{},"sourceType":"module"}