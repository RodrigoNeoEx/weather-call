{"ast":null,"code":"import { requestCountry } from './country';\nimport { requestStates } from './states';\nimport { requestCity } from './city';\nimport { fetchCountryAPI, fetchStateByCountryAPI, fetchCityAPI } from '../../services/requestAPI';\nexport { requestCountry, requestStates, requestCity };\nexport const requestCountryAPI = input => async dispatch => {\n  dispatch(requestCountry());\n\n  try {\n    const response = await fetchCountryAPI(input);\n    return dispatch(requestCountry(response));\n  } catch (error) {\n    return console.log(error);\n  }\n};\nexport const requestStateAPI = input => async dispatch => {\n  dispatch(requestStates());\n\n  try {\n    const response = await fetchStateByCountryAPI(input);\n    return dispatch(requestStates(response));\n  } catch (error) {\n    return console.log(error);\n  }\n};\nexport const requestCityAPI = () => async dispatch => {\n  dispatch(requestCity());\n\n  try {\n    const response = await fetchCityAPI();\n    return dispatch(requestCity(response.name));\n  } catch (error) {\n    return console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/neo/Desktop/gitHub/Personal Front End Projects/weather-call/src/redux/actions/index.jsx"],"names":["requestCountry","requestStates","requestCity","fetchCountryAPI","fetchStateByCountryAPI","fetchCityAPI","requestCountryAPI","input","dispatch","response","error","console","log","requestStateAPI","requestCityAPI","name"],"mappings":"AAAA,SAASA,cAAT,QAA+B,WAA/B;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SACEC,eADF,EAEEC,sBAFF,EAGEC,YAHF,QAIO,2BAJP;AAMA,SACEL,cADF,EAEEC,aAFF,EAGEC,WAHF;AAMA,OAAO,MAAMI,iBAAiB,GAAIC,KAAD,IAAW,MAAOC,QAAP,IAAoB;AAC9DA,EAAAA,QAAQ,CAACR,cAAc,EAAf,CAAR;;AACA,MAAI;AACF,UAAMS,QAAQ,GAAG,MAAMN,eAAe,CAACI,KAAD,CAAtC;AACA,WAAOC,QAAQ,CAACR,cAAc,CAACS,QAAD,CAAf,CAAf;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,WAAOC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAP;AACD;AACF,CARM;AAUP,OAAO,MAAMG,eAAe,GAAIN,KAAD,IAAW,MAAOC,QAAP,IAAoB;AAC5DA,EAAAA,QAAQ,CAACP,aAAa,EAAd,CAAR;;AACA,MAAI;AACF,UAAMQ,QAAQ,GAAG,MAAML,sBAAsB,CAACG,KAAD,CAA7C;AACA,WAAOC,QAAQ,CAACP,aAAa,CAACQ,QAAD,CAAd,CAAf;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,WAAOC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAP;AACD;AACF,CARM;AAUP,OAAO,MAAMI,cAAc,GAAG,MAAM,MAAON,QAAP,IAAoB;AACtDA,EAAAA,QAAQ,CAACN,WAAW,EAAZ,CAAR;;AACA,MAAI;AACF,UAAMO,QAAQ,GAAG,MAAMJ,YAAY,EAAnC;AACA,WAAOG,QAAQ,CAACN,WAAW,CAACO,QAAQ,CAACM,IAAV,CAAZ,CAAf;AACD,GAHD,CAGE,OAAOL,KAAP,EAAc;AACd,WAAOC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAP;AACD;AACF,CARM","sourcesContent":["import { requestCountry } from './country';\nimport { requestStates } from './states';\nimport { requestCity } from './city';\nimport {\n  fetchCountryAPI,\n  fetchStateByCountryAPI,\n  fetchCityAPI,\n} from '../../services/requestAPI';\n\nexport {\n  requestCountry,\n  requestStates,\n  requestCity,\n};\n\nexport const requestCountryAPI = (input) => async (dispatch) => {\n  dispatch(requestCountry());\n  try {\n    const response = await fetchCountryAPI(input);\n    return dispatch(requestCountry(response));\n  } catch (error) {\n    return console.log(error);\n  }\n};\n\nexport const requestStateAPI = (input) => async (dispatch) => {\n  dispatch(requestStates());\n  try {\n    const response = await fetchStateByCountryAPI(input);\n    return dispatch(requestStates(response));\n  } catch (error) {\n    return console.log(error);\n  }\n};\n\nexport const requestCityAPI = () => async (dispatch) => {\n  dispatch(requestCity());\n  try {\n    const response = await fetchCityAPI();\n    return dispatch(requestCity(response.name));\n  } catch (error) {\n    return console.log(error);\n  }\n};"]},"metadata":{},"sourceType":"module"}